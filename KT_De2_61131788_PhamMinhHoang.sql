Create database QLVT_2
use QLVT_2
Go
CREATE TABLE XE (
	MAXE VARCHAR(4) PRIMARY KEY,
	BIENSOXE  VARCHAR(8) NOT NULL,
	HANGSX VARCHAR(15) NOT NULL,
	TONGSOGHE TINYINT NOT NULL,
)
CREATE TABLE TAIXE (
	MATAIXE VARCHAR(4) PRIMARY KEY,
	HODEMTX  NVARCHAR(20) NOT NULL,
	TENTX NVARCHAR(15) NOT NULL,
	NGAYSINH DATE NOT NULL,
)
CREATE TABLE NOIDEN (
	MANOIDEN VARCHAR(4) PRIMARY KEY,
	TENNOIDEN  NVARCHAR(20) NOT NULL,
	SOKM INT NOT NULL,
	GIAVE MONEY NOT NULL,
)
CREATE TABLE CHUYENXE (
	NGAY DATE NOT NULL,
	MAXE VARCHAR(4) NOT NULL,
	MATAIXE VARCHAR(4) NOT NULL,
	MANOIDEN VARCHAR(4) NOT NULL,
	SOVE TINYINT NOT NULL
)
ALTER TABLE CHUYENXE
ADD CONSTRAINT PK_CX PRIMARY KEY (NGAY,MAXE)
ALTER TABLE CHUYENXE
ADD CONSTRAINT FK_CX FOREIGN KEY (MAXE) REFERENCES XE (MAXE)
ALTER TABLE CHUYENXE
ADD CONSTRAINT FK_ND FOREIGN KEY (MANOIDEN) REFERENCES NOIDEN (MANOIDEN)
ALTER TABLE CHUYENXE
ADD CONSTRAINT FK_TX FOREIGN KEY (MATAIXE) REFERENCES TAIXE (MATAIXE)

INSERT INTO XE
VALUES ('X001', '79H-1234', 'Aerospace', 45)
INSERT INTO XE
VALUES ('X002', '79H-3456', 'Aerospace', 50)
INSERT INTO XE
VALUES ('X003', '79H-6789', 'Aerospace', 30)
INSERT INTO XE
VALUES ('X004', '79H-2345', 'Aerospace', 20)
INSERT INTO XE
VALUES ('X005', '79H-9876', 'Aerospace', 60)

INSERT INTO TAIXE
VALUES ('TX01', N'Huỳnh Quốc', N'Nhanh', '03/08/1990')
INSERT INTO TAIXE
VALUES ('TX02', N'Nguyễn Ngọc', N'Huyền', '12/05/1992')
INSERT INTO TAIXE
VALUES ('TX03', N'CAO MINH', N'TƯỞNG', '05/06/1990')
INSERT INTO TAIXE
VALUES ('TX04', N'Huỳnh VĂN', N'BẢO', '05/07/1990')
INSERT INTO TAIXE
VALUES ('TX05', N'NGUYỄN MINH', N'PHI', '4/26/1990')

INSERT INTO NOIDEN
VALUES ('SG', N'Sài Gòn', 450, 70)
INSERT INTO NOIDEN
VALUES ('HN', N'Hà Nội', 1350, 200)
INSERT INTO NOIDEN
VALUES ('NT', N'NHA TRANG', 650, 80)
INSERT INTO NOIDEN
VALUES ('DN', N'ĐÀ NẴNG', 300, 90)
INSERT INTO NOIDEN
VALUES ('PY', N'PHÚ YÊN', 2700, 150)

INSERT INTO CHUYENXE
VALUES ('5/21/2018', 'X001', 'TX02', 'SG',31)
INSERT INTO CHUYENXE
VALUES ('5/21/2019', 'X002', 'TX05', 'HN',20)
INSERT INTO CHUYENXE
VALUES ('5/21/2019', 'X003', 'TX04', 'NT',70)
INSERT INTO CHUYENXE
VALUES ('5/15/2019', 'X004', 'TX03', 'PY',50)
INSERT INTO CHUYENXE
VALUES ('5/25/2019', 'X005', 'TX01', 'DN',45)


--CÂU 2:
--A.Liệt kê các chuyến xe do tài xế tên “Sơn” thực hiện trong năm 2019. Gồm Mã tài xế, họ tên (họ đệm kết hợp với tên), 
--ngày, biển số xe, tên nơi đến, số vé, doanh thu (tính từ số vé của chuyến xe và giá vé nơi đến).
SELECT CX.MATAIXE, TX.HODEMTX+' '+TX.TENTX AS [HO TEN], CX.NGAY,X.BIENSOXE,ND.TENNOIDEN,CX.SOVE, SUM(CX.SOVE * ND.GIAVE) AS [DOANH THU]
FROM CHUYENXE CX JOIN TAIXE TX ON CX.MATAIXE=TX.MATAIXE
JOIN XE X ON CX.MAXE=X.MAXE
JOIN NOIDEN ND ON CX.MANOIDEN=ND.MANOIDEN
WHERE TX.TENTX = 'SƠN' AND YEAR(CX.NGAY) = 2019
GROUP BY CX.MATAIXE, TX.HODEMTX+' '+TX.TENTX,CX.NGAY,X.BIENSOXE,ND.TENNOIDEN,CX.SOVE

--B.Tính tổng số vé bán được theo từng nơi đến trong tháng 5/2019. Gồm các thông tin: Tên nơi đến, số vé bán, tổng số tiền.
SELECT ND.TENNOIDEN,SUM(CX.SOVE) AS [SO VE BAN], SUM(CX.SOVE *ND.GIAVE) AS [TONG SO TIEN]
FROM CHUYENXE CX JOIN NOIDEN ND ON CX.MANOIDEN=ND.MANOIDEN
WHERE MONTH(CX.NGAY)=5 AND YEAR(CX.NGAY)=2019
GROUP BY ND.TENNOIDEN
--c.	Cho biết xe nào chạy nhiều km nhất trong năm 2019. Gồm các thông tin: mã xe, biển số xe, tổng số km đã chạy.
SELECT top 1 CX.MAXE,X.BIENSOXE, SUM(ND.SOKM) AS [TONG SO KM]
FROM CHUYENXE CX JOIN NOIDEN ND ON CX.MANOIDEN=ND.MANOIDEN
JOIN XE X ON CX.MAXE=X.MAXE
WHERE YEAR(CX.NGAY) = 2019
GROUP BY CX.MAXE,X.BIENSOXE
order by SUM(ND.SOKM) desc

--d.	Đếm số chuyến xe của từng tài xế theo từng nơi đến trong năm 2019.
SELECT CX.MATAIXE, ND.MANOIDEN ,COUNT(*) AS [SO CHUYEN XE]
FROM CHUYENXE CX JOIN TAIXE TX ON CX.MATAIXE=TX.MATAIXE
JOIN NOIDEN ND ON CX.MANOIDEN=ND.MANOIDEN
WHERE YEAR(CX.NGAY) = 2019
GROUP BY  CX.MATAIXE,CX.MATAIXE,ND.MANOIDEN
--e.	Liệt kê thông tin của tài xế tham gia lái tất cả các mã xe.
SELECT DISTINCT TX.HODEMTX+' '+TX.TENTX AS [TEN TX],TX.MATAIXE
FROM TAIXE TX JOIN CHUYENXE CX ON TX.MATAIXE=CX.MATAIXE
WHERE NOT EXISTS ( SELECT *
					FROM XE X1
					WHERE NOT EXISTS (SELECT *
										FROM CHUYENXE CX1
										WHERE CX1.MATAIXE=CX.MATAIXE AND CX1.MAXE=X1.MAXE)		
)
SELECT CX.MATAIXE, TX.HODEMTX+' '+TX.TENTX AS [HO TEN]
FROM CHUYENXE CX JOIN TAIXE TX ON CX.MATAIXE=TX.MATAIXE
GROUP BY CX.MATAIXE,TX.HODEMTX+' '+TX.TENTX
HAVING COUNT(CX.MATAIXE) = (SELECT COUNT(*) FROM XE)

--f.	Liệt kê thông tin của chuyến xe có tổng số tiền thu được là nhiều nhất (Ngày, mã xe, mã tài xế, tổng số tiền thu được).
SELECT	cx.NGAY, CX.MAXE,CX.MANOIDEN,CX.MATAIXE, SUM(CX.SOVE*ND.GIAVE) AS [TONG SO TIEN]
FROM CHUYENXE CX JOIN NOIDEN ND ON CX.MANOIDEN=ND.MANOIDEN
GROUP BY CX.MAXE,CX.MANOIDEN,CX.MATAIXE
HAVING SUM(CX.SOVE*ND.GIAVE) >= ALL(SELECT CX1.MAXE,SUM(CX1.SOVE*ND1.GIAVE) AS [SO TIEN] 
									FROM CHUYENXE CX1 JOIN NOIDEN ND1 ON CX1.MANOIDEN=ND1.MANOIDEN
									GROUP BY CX1.MAXE)
