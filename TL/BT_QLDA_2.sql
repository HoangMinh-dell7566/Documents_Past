CREATE DATABASE BT_QLDA_2
GO

USE BT_QLDA_2
GO

CREATE TABLE NHANVIEN (
	MANV VARCHAR(5) NOT NULL,
	HONV NVARCHAR(20) NOT NULL,
	TENLOT NVARCHAR(20) NOT NULL,
	TENNV NVARCHAR(10) NOT NULL,
	NGAYSINH DATETIME NOT NULL,
	DIACHI NVARCHAR(100) NOT NULL,
	PHAI BIT NOT NULL,
	LUONG DECIMAL(10,2) NOT NULL,
	MAPB VARCHAR(5) NOT NULL
)

CREATE TABLE DEAN (
	MADA VARCHAR(5) NOT NULL,
	TENDA NVARCHAR(50) NOT NULL,
	DDIEM_DA NVARCHAR(100) NOT NULL,
	MAPB VARCHAR(10) NOT NULL
)

CREATE TABLE DDIEMPB (
	MAPB VARCHAR(5) NOT NULL,
	DIADIEM NVARCHAR(100) NOT NULL
)

CREATE TABLE  PHONGBAN(
	MAPB VARCHAR(5) NOT NULL,
	TENPB NVARCHAR(50) NOT NULL,
	TRUONGPHONG VARCHAR(5) NOT NULL,
	NG_NHANCHUC DATETIME NOT NULL
)

CREATE TABLE PHANCONG (
	MANV VARCHAR(5) NOT NULL,
	MADA VARCHAR(5) NOT NULL,
	THOIGIAN DECIMAL(5,1) NOT NULL,
)

CREATE TABLE THANNHAN (
	MANV VARCHAR(5) NOT NULL,
	TENTN NVARCHAR(50) NOT NULL,
	PHAI BIT NOT NULL,
	NGAYSINH DATETIME NOT NULL,
	QUANHE NVARCHAR(20) NOT NULL
)

ALTER TABLE NHANVIEN
ADD CONSTRAINT PK_NHANVIEN PRIMARY KEY (MANV)

ALTER TABLE DEAN
ADD CONSTRAINT PK_DEAN PRIMARY KEY (MADA)

ALTER TABLE DDIEMPB
ADD CONSTRAINT PK_DDIEMPB PRIMARY KEY (MAPB, DIADIEM)

ALTER TABLE PHONGBAN
ADD CONSTRAINT PK_PHONGBAN PRIMARY KEY (MAPB)

ALTER TABLE PHANCONG
ADD CONSTRAINT PK_PHANCONG PRIMARY KEY (MANV, MADA)

ALTER TABLE NHANVIEN
ADD CONSTRAINT FK_NV_PB FOREIGN KEY (MAPB) REFERENCES PHONGBAN (MAPB)

ALTER TABLE PHONGBAN
ADD CONSTRAINT FK_PB_NV FOREIGN KEY (TRUONGPHONG) REFERENCES NHANVIEN (MANV)

ALTER TABLE DEAN
ADD CONSTRAINT FK_DA_PB FOREIGN KEY (MAPB) REFERENCES PHONGBAN (MAPB)--

ALTER TABLE DDIEMPB
ADD CONSTRAINT FK_DDPB_PB FOREIGN KEY (MAPB) REFERENCES PHONGBAN (MAPB)

ALTER TABLE PHANCONG
ADD CONSTRAINT FK_PC_NV FOREIGN KEY (MANV) REFERENCES NHANVIEN (MANV)

ALTER TABLE PHANCONG
ADD CONSTRAINT FK_PC_DA FOREIGN KEY (MADA) REFERENCES DEAN (MADA)

ALTER TABLE THANNHAN
ADD CONSTRAINT PK_THANNHAN PRIMARY KEY (MANV, TENTN)

ALTER TABLE THANNHAN
ADD CONSTRAINT FK_TN_NV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)

INSERT INTO NHANVIEN
VALUES ('NV1', 'DINH', 'BA', 'TIEN', '1/9/1965', '731 Tran Hung Dao, q1, TPHCM', 1, 30000, 'P3')
INSERT INTO NHANVIEN
VALUES ('NV2', 'VO', 'THANH', 'TUNG', '12/8/1955', '638 Tran Hung Dao', 1, 40000, 'P3')
INSERT INTO NHANVIEN
VALUES ('NV3', 'TRAN', 'THANH', 'TAM', '7/31/1972', '853 Mai Thi Luu, Q1, TPHCM', 1, 25000, 'P2')
INSERT INTO NHANVIEN
VALUES ('NV4', 'VO', 'MANH', 'HUNG', '9/15/1962', '975 Ba Ria, Vung Tau', 1, 38000, 'P2')
INSERT INTO NHANVIEN
VALUES ('NV5', 'LE', 'NGOC', 'QUYEN', '10/10/1977', '450 Trung Vuong, Ha Noi', 0, 55000, 'P1')
INSERT INTO NHANVIEN
VALUES ('NV6', 'TRAN', 'MINH', 'KHANG', '6/24/1962', 'Tran Binh Trong, TPHCM', 1, 58000, 'P1')
INSERT INTO NHANVIEN
VALUES ('NV7', 'LE', 'THI', 'NHAN', '6/20/1961', '291 Ho Van Huc, QPN, TPHCM', 0, 43000, 'P3')
INSERT INTO NHANVIEN
VALUES ('NV8', 'TRAN', 'HONG', 'QUANG', '3/29/1979', '980 Le Hong Phong, Q10, TPHCM', 1, 25000, 'P2')
INSERT INTO NHANVIEN
VALUES ('NV9', 'BUI', 'THUY', 'VU', '7/19/1958', '332 Nguyen Thai Hoc, Q1, TPHCM', 0, 25000, 'P1')

INSERT INTO DDIEMPB
VALUES ('P1', 'TPHCM')
INSERT INTO DDIEMPB
VALUES ('P2', 'HA NOI')
INSERT INTO DDIEMPB
VALUES ('P3', 'NHA TRANG')
INSERT INTO DDIEMPB
VALUES ('P3', 'TPHCM')
INSERT INTO DDIEMPB
VALUES ('P3', 'VUNG TAU' )

INSERT INTO DEAN
VALUES ('DA1', 'San pham X', 'VUNG TAU', 'P3')
INSERT INTO  DEAN
VALUES ('DA2', 'San pham Y', 'NHA TRANG', 'P3')
INSERT INTO  DEAN
VALUES ('DA3', 'San pham Z', 'TPHCM', 'P3')
INSERT INTO  DEAN
VALUES ('DA4', 'Tin hoc hoa', 'HA NO', 'P2')
INSERT INTO  DEAN
VALUES ('DA5', 'Cap quang', 'TPHCM', 'P1')
INSERT INTO  DEAN
VALUES ('DA6', 'Dao tao', 'HA NOI', 'P2')

INSERT INTO  PHONGBAN
VALUES ('P1', 'QUANLY', 'NV5', '6/19/2001')
INSERT INTO  PHONGBAN
VALUES ('P2', 'DIEUHANH', 'NV8', '1/1/1985')
INSERT INTO  PHONGBAN
VALUES ('P3', 'NGHIENCUU', 'NV2', '5/22/1998')

INSERT INTO  PHANCONG
VALUES ('NV1', 'DA1', 32.5)
INSERT INTO  PHANCONG
VALUES ('NV1', 'DA2', 7.5)
INSERT INTO  PHANCONG
VALUES ('NV1', 'DA3', 10)
INSERT INTO  PHANCONG
VALUES ('NV2', 'DA3', 40)
INSERT INTO  PHANCONG
VALUES ('NV2', 'DA4', 20)
INSERT INTO  PHANCONG
VALUES ('NV2', 'DA5', 20)
INSERT INTO  PHANCONG
VALUES ('NV3', 'DA1', 20)
INSERT INTO  PHANCONG
VALUES ('NV3', 'DA2', 20)
INSERT INTO  PHANCONG
VALUES ('NV4', 'DA3', 10)
INSERT INTO  PHANCONG
VALUES ('NV5', 'DA4', 10)
INSERT INTO  PHANCONG
VALUES ('NV5', 'DA5', 10)
INSERT INTO  PHANCONG
VALUES ('NV7', 'DA6', 30)
INSERT INTO  PHANCONG
VALUES ('NV8', 'DA4', 10)
INSERT INTO  PHANCONG
VALUES ('NV8', 'DA6', 20)
INSERT INTO  PHANCONG
VALUES ('NV9', 'DA4', 15 )

INSERT INTO THANNHAN
VALUES ('NV1', N'DINH BA KIEN', 1, '1995/7/15', N'CON TRAI')
INSERT INTO THANNHAN
VALUES ('NV1', N'NGUYEN THANH THAO', 0, '1968/4/8', N'VỢ')
INSERT INTO THANNHAN
VALUES ('NV2', N'VO THANH SON', 1, '1930/9/23', N'CHA')
INSERT INTO THANNHAN
VALUES ('NV3', N'LE THI HUONG', 0, '1974/1/9', N'VỢ')
INSERT INTO THANNHAN
VALUES ('NV6', N'TRAN MINH AN', 1, '1960/8/5', N'ANH TRAI')
INSERT INTO THANNHAN
VALUES ('NV7', N'LE THI NGAN', 0, '1965/6/7', N'EM GÁI')
INSERT INTO THANNHAN
VALUES ('NV9', N'TRAN QUOC VUONG', 1, '1975/5/5', N'CHỒNG')

-- CÂU 4.3.1: Cho biết tên, tuổi của từng nhân viên
SELECT HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV], DATEDIFF(YEAR, NGAYSINH, GETDATE()) AS TUOI
FROM NHANVIEN


-- CÂU 4.3.2: Cho biết thông tin về những người có phái là nam và địa chỉ trên đường “Tran Hung Dao”.
SELECT *
FROM NHANVIEN
WHERE PHAI = 1 AND DIACHI LIKE '%TRAN HUNG DAO%'


-- CÂU 4.3.3: Cho biết những người có họ là “Le” và tên bắt đầu bằng ký tự “N”
SELECT *
FROM NHANVIEN
WHERE HONV = 'LE' AND TENNV LIKE 'N%'


-- CÂU 4.3.4: Cho biết những người có ngày sinh trong tháng 7 năm 1978.
SELECT *
FROM NHANVIEN
WHERE DATEPART(MONTH, NGAYSINH) = 7 AND DATEPART(YEAR, NGAYSINH) = 1978


-- CÂU 4.3.5: Cho biết những người có ngày sinh trong quý 3
SELECT *
FROM NHANVIEN
WHERE DATEPART(QUARTER, NGAYSINH) = 3

-- CÂU 4.3.6: Cho biết số đề án được phân công của từng nhân viên (gồm mã số, tên, số lượng đề án được phân công).
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV], COUNT(MADA) AS [SO DE AN]
FROM NHANVIEN NV JOIN PHANCONG PC ON NV.MANV = PC.MANV
GROUP BY NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV

--7
SELECT HONV + ' ' + TENLOT+' ' + TENNV AS [Họ tên], COUNT(THANNHAN.MANV)
FROM dbo.NHANVIEN INNER JOIN dbo.THANNHAN ON THANNHAN.MANV = NHANVIEN.MANV
GROUP BY HONV + ' ' + TENLOT+' ' + TENNV
HAVING COUNT(NHANVIEN.MANV)>=2
-- CÂU 4.3.7: Cho biết tên nhân viên có từ 2 thân nhân trở lên
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV], COUNT(TN.MANV) AS [SO THAN NHAN]
FROM NHANVIEN NV JOIN THANNHAN TN ON NV.MANV = TN.MANV
GROUP BY NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV
HAVING COUNT(TN.MANV) >= 2

-- CÂU 4.3.8: Tên nhân viên >= 30 tuổi được phân công làm việc cho đề án ở TPHCM
SELECT DISTINCT HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV JOIN PHANCONG PC ON NV.MANV = PC.MANV
				 JOIN DEAN DA ON PC.MADA = DA.MADA
WHERE DATEDIFF(YEAR, NGAYSINH, GETDATE()) >= 30 AND DDIEM_DA = 'TPHCM'

-- CÂU 4.3.9: Cho biết có bao nhiêu đề án ở TPHCM
SELECT COUNT(MADA) AS [SO DE AN O TPHCM]
FROM DEAN
WHERE DDIEM_DA = 'TPHCM'

-- CÂU 4.3.10: Đối với mỗi thành phố, cho biết tên và số lường đề án được thực hiện ở thành phố đó
SELECT DDIEM_DA, COUNT(MADA) AS [SO DE AN]
FROM DEAN
GROUP BY DDIEM_DA

-- CÂU 4.3.11: Cho biết số năm thâm niên (số năm làm trưởng phòng) của từng trưởng phòng
SELECT HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN TRUONG PHONG], DATEDIFF(YEAR, NG_NHANCHUC, GETDATE()) AS [THAM NIEN]
FROM PHONGBAN PB JOIN NHANVIEN NV ON PB.TRUONGPHONG = NV.MANV

-- CÂU 4.3.12: Cho biết số lượng địa điểm của từng phòng ban
SELECT PB.MAPB, TENPB, COUNT(DIADIEM) AS [SO DIA DIEM]
FROM PHONGBAN PB JOIN DDIEMPB DDPB ON PB.MAPB = DDPB.MAPB
GROUP BY PB.MAPB, TENPB

-- CÂU 4.3.13: Cho biết có bao nhiêu tên đề án là “sản phẩm”
SELECT COUNT(MADA) AS [SO DE AN SAN PHAM]
FROM DEAN
WHERE TENDA LIKE '%SAN PHAM%'

-- CÂU 4.3.14: Cho biết tên phòng, địa điểm phòng, tên đề án, địa điểm đề án của những đề án có địa điểm của đề án trùng với địa điểm của phòng
SELECT TENPB, DIADIEM, TENDA, DDIEM_DA
FROM PHONGBAN PB JOIN DDIEMPB DDPB ON PB.MAPB = DDPB.MAPB
				 JOIN DEAN DA ON DA.MAPB = PB.MAPB
WHERE DDIEM_DA = DIADIEM

-- CÂU 4.3.15: Tên các nhân viên quản lý có mức lương thấp hơn lương trung bình nhân viên họ quản lý trực tiếp
SELECT HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV JOIN PHONGBAN PB ON NV.MANV = PB.TRUONGPHONG
WHERE LUONG < (SELECT AVG(LUONG) FROM NHANVIEN WHERE MAPB = NV.MAPB AND MANV != NV.MANV)

-- CÂU 4.3.16: Xóa các nhân viên có số thân nhân >= 3
DELETE FROM NHANVIEN
WHERE 3 <= (SELECT COUNT(MANV) FROM THANNHAN WHERE NHANVIEN.MANV = THANNHAN.MANV)

-- CÂU 4.3.17: Mã nhân viên “NV5” có mức lương cao nhất hay không? (Trả lời “có” hay “không”)
SELECT CASE
	WHEN (SELECT LUONG FROM NHANVIEN WHERE MANV = 'NV5') >= (SELECT MAX(LUONG) FROM NHANVIEN) THEN 'CO'
	ELSE 'KHONG'
END AS [TRA LOI]

-- CÂU 4.3.18: Tên nhân viên đã có gia đình (thân nhân) nhưng chưa có con
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV JOIN THANNHAN TN ON NV.MANV = TN.MANV
WHERE QUANHE LIKE N'%CHỒNG%' OR QUANHE LIKE N'%VỢ%'
EXCEPT
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV JOIN THANNHAN TN ON NV.MANV = TN.MANV
WHERE QUANHE LIKE N'%CON%'

-- CÂU 4.3.19: Đối với từng đề án, cho biết tên nhân viên, tên đề án, số giờ làm việc nhiều nhất
SELECT TENDA, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV], THOIGIAN
FROM DEAN DA JOIN PHANCONG PC ON DA.MADA = PC.MADA
			 JOIN NHANVIEN NV ON PC.MANV = NV.MANV
WHERE THOIGIAN >= (SELECT MAX(THOIGIAN) FROM PHANCONG WHERE MADA = DA.MADA)

-- CÂU 4.3.20: Tên những nhân viên được phân công làm việc cho tất cả các đề án ở Hà Nội.
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV JOIN PHANCONG PC ON NV.MANV = PC.MANV
				 JOIN DEAN DA ON PC.MADA = DA.MADA
WHERE DDIEM_DA = 'HA NOI'
GROUP BY NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV
HAVING COUNT(PC.MADA) >= (SELECT COUNT(MADA) FROM DEAN WHERE DDIEM_DA = 'HA NOI')
	-- HAY
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV
WHERE NOT EXISTS (SELECT MADA FROM DEAN WHERE DDIEM_DA = 'HA NOI'
				  EXCEPT
				  SELECT DEAN.MADA FROM PHANCONG JOIN DEAN ON PHANCONG.MADA = DEAN.MADA WHERE DDIEM_DA = 'HA NOI' AND MANV = NV.MANV)

-- CÂU 4.3.21: Tên phòng ban có trưởng phòng là nhân viên nữ
SELECT TENPB
FROM PHONGBAN PB JOIN NHANVIEN NV ON PB.TRUONGPHONG = NV.MANV
WHERE PHAI = 'NU'

-- CÂU 4.3.22: Đối với từng đề án, cho biết số lượng nhân viên tham gia đề án, tổng số giờ làm việc của đề án
SELECT DA.MADA, TENDA, COUNT(MANV) AS [SO NHAN VIEN THAM GIA], SUM(THOIGIAN) AS [TONG THOI GIAN]
FROM PHANCONG PC JOIN DEAN DA ON PC.MADA = DA.MADA
GROUP BY DA.MADA, TENDA

-- CÂU 4.3.23: Đối với từng phòng ban, cho biết tên phòng ban, tổng số nam, tổng số nữ
SELECT PB.MAPB, TENPB, CASE WHEN [SO NU] IS NULL THEN 0 ELSE [SO NU] END AS [SO NU], CASE WHEN [SO NAM] IS NULL THEN 0 ELSE [SO NAM] END AS [SO NAM]
FROM PHONGBAN PB FULL JOIN (SELECT MAPB, COUNT(MANV) AS [SO NU] FROM NHANVIEN WHERE PHAI = 0 GROUP BY MAPB) NU ON PB.MAPB = NU.MAPB
				FULL JOIN (SELECT MAPB, COUNT(MANV) AS [SO NAM] FROM NHANVIEN WHERE PHAI = 1 GROUP BY MAPB) NAM ON PB.MAPB = NAM.MAPB

-- CÂU 4.3.24: Tên phòng ban có nhân viên nữ nhiều nhất
SELECT TENPB, COUNT(MANV) AS [SO NV NU]
FROM PHONGBAN PB JOIN NHANVIEN NV ON PB.MAPB = NV.MAPB
WHERE PHAI = 'NU'
GROUP BY TENPB
HAVING COUNT(MANV) >= ALL (SELECT COUNT(MANV) FROM NHANVIEN WHERE PHAI = 'NU' GROUP BY MAPB)

-- CÂU 4.3.25: Nhân viên có mã số là “NV4” lớn tuổi nhất hay không? ( Trả lời “Có” hoặc “Không”).
SELECT CASE
		WHEN DATEDIFF(YEAR, NGAYSINH, GETDATE()) >= ALL (SELECT DATEDIFF(YEAR, NGAYSINH, GETDATE()) FROM NHANVIEN) THEN 'CO'
		ELSE 'KHONG'
	   END AS [TRA LOI]
FROM NHANVIEN
WHERE MANV = 'NV4'

-- CÂU 4.3.26: Đối với từng phòng ban, cho biết tên phòng ban, lương trung bình của nữ nhân viên, lương trung bình của nam nhân viên
SELECT PB.MAPB, TENPB, CASE WHEN [LUONG TB NU] IS NULL THEN 0 ELSE [LUONG TB NU] END AS [LUONG TB NU], CASE WHEN [LUONG TB NAM] IS NULL THEN 0 ELSE [LUONG TB NAM] END AS [LUONG TB NAM]
FROM PHONGBAN PB FULL JOIN (SELECT MAPB, AVG(LUONG) AS [LUONG TB NU] FROM NHANVIEN WHERE PHAI = 0 GROUP BY MAPB) NU ON PB.MAPB = NU.MAPB
				FULL JOIN (SELECT MAPB, AVG(LUONG) AS [LUONG TB NAM] FROM NHANVIEN WHERE PHAI = 1 GROUP BY MAPB) NAM ON PB.MAPB = NAM.MAPB

-- CÂU 4.3.27: Tăng 10% lương đối với các nhân viên là nữ và được phân công làm việc cho đề án ở Vũng Tàu hay Nha Trang
UPDATE NHANVIEN
SET LUONG = LUONG * 1.1
WHERE PHAI = 0 AND MANV IN (SELECT DISTINCT MANV FROM DEAN JOIN PHANCONG ON DEAN.MADA = PHANCONG.MADA WHERE DDIEM_DA IN ('VUNG TAU', 'NHA TRANG'))

-- CÂU 4.3.28: Tên và địa chỉ các nhân viên làm việc cho một đề án ở thành phố nhưng địa điểm phòng ban mà họ trực thuộc tất cả đều không ở trong thành phố đó
SELECT DISTINCT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV], DIACHI
FROM NHANVIEN NV JOIN DDIEMPB DDPB ON NV.MAPB = DDPB.MAPB
				 JOIN PHANCONG PC ON NV.MANV = PC.MANV
				 JOIN DEAN DA ON PC.MADA = DA.MADA
WHERE DDIEM_DA NOT IN (SELECT DIADIEM FROM DDIEMPB WHERE MAPB = NV.MAPB)

-- CÂU 4.3.29: Tên các đề án thuộc các phòng ban có địa điểm ở Hà Nội
SELECT TENDA
FROM DEAN JOIN DDIEMPB ON DEAN.MAPB = DDIEMPB.MAPB
WHERE DIADIEM = 'HA NOI'

-- CÂU 4.3.30: Tên những nhân viên là trưởng phòng và cư ngụ tại TPHCM
SELECT HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN TRUONG PHONG]
FROM NHANVIEN NV JOIN PHONGBAN PB ON NV.MANV = PB.TRUONGPHONG
WHERE DIACHI LIKE '%HCM%'

-- CÂU 4.3.31: Tên nhân viên là trưởng phòng có ngày nhận chức sau cùng (mới nhất)
SELECT HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN TRUONG PHONG], NG_NHANCHUC
FROM NHANVIEN NV JOIN PHONGBAN PB ON NV.MANV = PB.TRUONGPHONG
WHERE NG_NHANCHUC >= ALL (SELECT NG_NHANCHUC FROM PHONGBAN)

-- CÂU 4.3.32: Phòng ban nào chỉ phụ trách các đề án ở Hà Nội?
SELECT DA.MAPB
FROM DEAN DA
WHERE DDIEM_DA LIKE '%HA NOI%'
GROUP BY DA.MAPB
HAVING COUNT(MADA) = (SELECT COUNT(MADA) FROM DEAN WHERE MAPB = DA.MAPB)

-- CÂU 4.3.33: Thêm vào quan hệ PHANCONG các bộ là các đề án mà nhân viên NV3 chưa được phân công
INSERT INTO PHANCONG
SELECT 'NV3', MADA, NULL
FROM DEAN
WHERE MADA NOT IN (SELECT MADA FROM PHANCONG WHERE MANV = 'NV3')

-- CÂU 4.3.34: Liệt kê tên phòng ban, tên trưởng phòng của các phòng ban có nhiều nhân viên nữ nhất
SELECT PB.MAPB, TENPB, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN TRUONG PHONG]
FROM NHANVIEN NV JOIN PHONGBAN PB ON NV.MANV = PB.TRUONGPHONG
WHERE (SELECT COUNT(MANV) FROM NHANVIEN WHERE MAPB = PB.MAPB AND PHAI = 0) >= ALL (SELECT COUNT(MANV) FROM NHANVIEN WHERE PHAI = 0 GROUP BY MAPB)
	-- HAY
SELECT TENPB, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN TRUONG PHONG], [SO NU]
FROM PHONGBAN PB JOIN (SELECT MAPB, COUNT(MANV) AS [SO NU]
						FROM NHANVIEN
						WHERE PHAI = 0
						GROUP BY MAPB
						HAVING COUNT(MANV) >= ALL (SELECT COUNT(MANV) FROM NHANVIEN WHERE PHAI = 0 GROUP BY MAPB)) TK ON PB.MAPB = TK.MAPB
				 JOIN NHANVIEN NV ON PB.TRUONGPHONG = NV.MANV

-- CÂU 4.3.35: Tên nhân viên được phân công làm việc cho tất cả các đề án của phòng P2
SELECT NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV]
FROM NHANVIEN NV JOIN PHANCONG PC ON NV.MANV = PC.MANV
WHERE MADA IN (SELECT MADA FROM DEAN WHERE MAPB = 'P2')
GROUP BY NV.MANV, HONV + ' ' + TENLOT + ' ' + TENNV
HAVING COUNT(MADA) >= (SELECT COUNT(MADA) FROM DEAN WHERE MAPB = 'P2')

-- CÂU 4.3.36: Cho biết tên đề án, tên nhân viên, số giờ của từng đề án được phân công và số giờ làm việc nhiều nhất.
SELECT TENDA, HONV + ' ' + TENLOT + ' ' + TENNV AS [HO TEN NV], THOIGIAN
FROM NHANVIEN NV JOIN PHANCONG PC ON NV.MANV = PC.MANV
				 JOIN DEAN DA ON PC.MADA = DA.MADA
WHERE THOIGIAN >= ALL (SELECT MAX(THOIGIAN) FROM PHANCONG WHERE MADA = PC.MADA)

-- CÂU 4.3.37: Đối với từng nhân viên: cho biết tên nhân viên, mã phòng ban và tên của người trưởng phòng.
SELECT NV.HONV + ' ' + NV.TENLOT + ' ' + NV.TENNV AS [HO TEN NV],
		CASE
			WHEN TP.HONV + ' ' + TP.TENLOT + ' ' + TP.TENNV = NV.HONV + ' ' + NV.TENLOT + ' ' + NV.TENNV THEN NULL
			ELSE TP.HONV + ' ' + TP.TENLOT + ' ' + TP.TENNV
		END AS [HO TEN TRUONG PHONG]
FROM NHANVIEN NV JOIN PHONGBAN PB ON NV.MAPB = PB.MAPB
				 JOIN NHANVIEN TP ON PB.TRUONGPHONG = TP.MANV

SELECT *
FROM NHANVIEN NV JOIN PHONGBAN PB ON NV.MAPB = PB.MAPB
				 JOIN NHANVIEN TP ON PB.TRUONGPHONG = TP.MANV